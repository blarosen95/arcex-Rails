default: &default
  adapter: postgresql
  encoding: unicode
  pool: <%= (ENV['RAILS_MAX_THREADS']&.to_i || 5) %>
  timeout: 5000
  username: <%= ENV['DB_USERNAME'] || 'root' %>
  password: "<%= ENV['DB_PASSWORD'].to_s %>"
  host: <%= ENV['DB_HOST'] || 'localhost' %>
  database: arcex_development

development:
  primary:
    <<: *default
  primary_replica:
    <<: *default
    replica: true

# Warning: The database defined as "test" will be erased and
# re-generated from your development database when you run "rake".
# Do not set this db to the same as development or production.
test:
  primary:
    <<: *default
    database: arcex_test
  primary_replica:
    <<: *default
    database: arcex_test
    replica: true

default_remote: &default_remote
  <<: *default
  pool: <%= (ENV['RAILS_MAX_THREADS']&.to_i || 15) %>
  username: <%= ENV['DB_USERNAME'] %>
  sslmode: require
  sslca: "./bin/aws-rds-global-bundle.pem"
  enable_cleartext_plugin: true
  variables:
    max_execution_time: <%= 30000 unless %w[testing_db production_db].include?(Rails.env) %>

remote_db: &remote_db
  primary:
    <<: *default_remote
    password: "<%= ENV['DB_PASSWORD'] %>"
    host: <%= ENV['DB_HOST'] %>

  primary_replica:
    <<: *default_remote
    username: <%= ENV['DB_USERNAME_READER'] %>
    password: "<%= ENV['DB_PASSWORD_READER'] %>"
    host: <%= ENV['DB_HOST_READER'] %>
    replica: true

  production_db:
    <<: *remote_db
  production:
    <<: *remote_db
  staging:
    <<: *remote_db
  maintenance:
    <<: *remote_db

  testing_db:
    <<: *remote_db
  testing:
    <<: *remote_db
# As with config/credentials.yml, you never want to store sensitive information,
# like your database password, in your source code. If your source code is
# ever seen by anyone, they now have access to your database.
#
# Instead, provide the password or a full connection URL as an environment
# variable when you boot the app. For example:
#
#   DATABASE_URL="mysql2://myuser:mypass@localhost/somedatabase"
#
# If the connection URL is provided in the special DATABASE_URL environment
# variable, Rails will automatically merge its configuration values on top of
# the values provided in this file. Alternatively, you can specify a connection
# URL environment variable explicitly:
#
#   production:
#     url: <%= ENV["MY_APP_DATABASE_URL"] %>
#
# Read https://guides.rubyonrails.org/configuring.html#configuring-a-database
# for a full overview on how database connection configuration can be specified.
#
production:
  <<: *default
  database: arcex_production
  username: arcex
  password: <%= ENV["ARCEX_DATABASE_PASSWORD"] %>
